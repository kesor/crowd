<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions xmlns:soapenc12="http://www.w3.org/2003/05/soap-encoding" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns5="http://rmi.java" xmlns:ns2="http://soap.integration.crowd.atlassian.com" xmlns:ns1="http://authentication.integration.crowd.atlassian.com" xmlns:ns4="http://lang.java" xmlns:ns3="http://exception.integration.crowd.atlassian.com" xmlns:tns="urn:SecurityServer" xmlns:soap11="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soapenc11="http://schemas.xmlsoap.org/soap/encoding/" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope" targetNamespace="urn:SecurityServer">
  <wsdl:types>
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://authentication.integration.crowd.atlassian.com">
      <xsd:complexType name="AuthenticatedToken">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="token" nillable="true" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PasswordCredential">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="credential" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="encryptedCredential" type="xsd:boolean"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfValidationFactor">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="ValidationFactor" nillable="true" type="ns1:ValidationFactor"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ValidationFactor">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="value" nillable="true" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PrincipalAuthenticationContext">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="application" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="credential" nillable="true" type="ns1:PasswordCredential"/>
          <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="validationFactors" nillable="true" type="ns1:ArrayOfValidationFactor"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ApplicationAuthenticationContext">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="credential" nillable="true" type="ns1:PasswordCredential"/>
          <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="validationFactors" nillable="true" type="ns1:ArrayOfValidationFactor"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="urn:SecurityServer">
      <xsd:element name="findAllGroupRelationships">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="ArrayOfString">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="string" nillable="true" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="findAllGroupRelationshipsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" nillable="true" type="ns2:ArrayOfSOAPNestableGroup"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="InvalidAuthorizationTokenException" type="ns3:InvalidAuthorizationTokenException"/>
      <xsd:element name="RemoteException" type="ns5:RemoteException"/>
      <xsd:element name="addGroup">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="ns2:SOAPGroup"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="addGroupResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" nillable="true" type="ns2:SOAPGroup"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="InvalidGroupException" type="ns3:InvalidGroupException"/>
      <xsd:element name="ApplicationPermissionException" type="ns3:ApplicationPermissionException"/>
      <xsd:element name="addPrincipalToRole">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in2" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="addPrincipalToRoleResponse">
        <xsd:complexType/>
      </xsd:element>
      <xsd:element name="ObjectNotFoundException" type="ns3:ObjectNotFoundException"/>
      <xsd:element name="findPrincipalByToken">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="findPrincipalByTokenResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" nillable="true" type="ns2:SOAPPrincipal"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="InvalidTokenException" type="ns3:InvalidTokenException"/>
      <xsd:element name="updatePrincipalCredential">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in2" nillable="true" type="ns1:PasswordCredential"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updatePrincipalCredentialResponse">
        <xsd:complexType/>
      </xsd:element>
      <xsd:element name="InvalidCredentialException" type="ns3:InvalidCredentialException"/>
      <xsd:element name="getGrantedAuthorities">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getGrantedAuthoritiesResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" nillable="true" type="tns:ArrayOfString"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="addPrincipal">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="ns2:SOAPPrincipal"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in2" nillable="true" type="ns1:PasswordCredential"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="addPrincipalResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" nillable="true" type="ns2:SOAPPrincipal"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="InvalidPrincipalException" type="ns3:InvalidPrincipalException"/>
      <xsd:element name="addAttributeToPrincipal">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in2" nillable="true" type="ns2:SOAPAttribute"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="addAttributeToPrincipalResponse">
        <xsd:complexType/>
      </xsd:element>
      <xsd:element name="invalidatePrincipalToken">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="invalidatePrincipalTokenResponse">
        <xsd:complexType/>
      </xsd:element>
      <xsd:element name="findAllGroupNames">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="findAllGroupNamesResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" nillable="true" type="tns:ArrayOfString"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="findRoleMemberships">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="findRoleMembershipsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" nillable="true" type="tns:ArrayOfString"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="removePrincipal">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="removePrincipalResponse">
        <xsd:complexType/>
      </xsd:element>
      <xsd:element name="isValidPrincipalToken">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in2" nillable="true" type="ns1:ArrayOfValidationFactor"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="isValidPrincipalTokenResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" type="xsd:boolean"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ApplicationAccessDeniedException" type="ns3:ApplicationAccessDeniedException"/>
      <xsd:element name="authenticatePrincipalSimple">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in2" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="authenticatePrincipalSimpleResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="InvalidAuthenticationException" type="ns3:InvalidAuthenticationException"/>
      <xsd:element name="InactiveAccountException" type="ns3:InactiveAccountException"/>
      <xsd:element name="removeRole">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="removeRoleResponse">
        <xsd:complexType/>
      </xsd:element>
      <xsd:element name="getCookieInfo">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getCookieInfoResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" nillable="true" type="ns2:SOAPCookieInfo"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updatePrincipalAttribute">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in2" nillable="true" type="ns2:SOAPAttribute"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updatePrincipalAttributeResponse">
        <xsd:complexType/>
      </xsd:element>
      <xsd:element name="searchGroups">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="ns2:ArrayOfSearchRestriction"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="searchGroupsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" nillable="true" type="ns2:ArrayOfSOAPGroup"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getCacheTime">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getCacheTimeResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" type="xsd:long"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="isRoleMember">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in2" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="isRoleMemberResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" type="xsd:boolean"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updateGroup">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in2" nillable="true" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in3" type="xsd:boolean"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updateGroupResponse">
        <xsd:complexType/>
      </xsd:element>
      <xsd:element name="findAllRoleNames">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="findAllRoleNamesResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" nillable="true" type="tns:ArrayOfString"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="findRoleByName">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="findRoleByNameResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" nillable="true" type="ns2:SOAPRole"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="isCacheEnabled">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="isCacheEnabledResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" type="xsd:boolean"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="findGroupByName">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="findGroupByNameResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" nillable="true" type="ns2:SOAPGroup"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="removePrincipalFromRole">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in2" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="removePrincipalFromRoleResponse">
        <xsd:complexType/>
      </xsd:element>
      <xsd:element name="authenticatePrincipal">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="ns1:PrincipalAuthenticationContext"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="authenticatePrincipalResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="findGroupMemberships">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="findGroupMembershipsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" nillable="true" type="tns:ArrayOfString"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="addPrincipalToGroup">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in2" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="addPrincipalToGroupResponse">
        <xsd:complexType/>
      </xsd:element>
      <xsd:element name="removeGroup">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="removeGroupResponse">
        <xsd:complexType/>
      </xsd:element>
      <xsd:element name="removeAttributeFromPrincipal">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in2" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="removeAttributeFromPrincipalResponse">
        <xsd:complexType/>
      </xsd:element>
      <xsd:element name="findAllPrincipalNames">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="findAllPrincipalNamesResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" nillable="true" type="tns:ArrayOfString"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="addRole">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="ns2:SOAPRole"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="addRoleResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" nillable="true" type="ns2:SOAPRole"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="InvalidRoleException" type="ns3:InvalidRoleException"/>
      <xsd:element name="createPrincipalToken">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in2" nillable="true" type="ns1:ArrayOfValidationFactor"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="createPrincipalTokenResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="searchRoles">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="ns2:ArrayOfSearchRestriction"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="searchRolesResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" nillable="true" type="ns2:ArrayOfSOAPRole"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="removePrincipalFromGroup">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in2" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="removePrincipalFromGroupResponse">
        <xsd:complexType/>
      </xsd:element>
      <xsd:element name="findPrincipalByName">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="findPrincipalByNameResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" nillable="true" type="ns2:SOAPPrincipal"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="resetPrincipalCredential">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="resetPrincipalCredentialResponse">
        <xsd:complexType/>
      </xsd:element>
      <xsd:element name="InvalidEmailAddressException" type="ns3:InvalidEmailAddressException"/>
      <xsd:element name="isGroupMember">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in2" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="isGroupMemberResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" type="xsd:boolean"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="searchPrincipals">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="in1" nillable="true" type="ns2:ArrayOfSearchRestriction"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="searchPrincipalsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" nillable="true" type="ns2:ArrayOfSOAPPrincipal"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getDomain">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:AuthenticatedToken"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getDomainResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" nillable="true" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="authenticateApplication">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="in0" nillable="true" type="ns1:ApplicationAuthenticationContext"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="authenticateApplicationResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="out" nillable="true" type="ns1:AuthenticatedToken"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://soap.integration.crowd.atlassian.com">
      <xsd:complexType name="ArrayOfSOAPNestableGroup">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="SOAPNestableGroup" nillable="true" type="ns2:SOAPNestableGroup"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SOAPNestableGroup">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="ID" type="xsd:long"/>
          <xsd:element minOccurs="0" name="active" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="attributes" nillable="true" type="ns2:ArrayOfSOAPAttribute"/>
          <xsd:element minOccurs="0" name="conception" type="xsd:dateTime"/>
          <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="directoryID" type="xsd:long"/>
          <xsd:element minOccurs="0" name="groupMembers" nillable="true" type="tns:ArrayOfString"/>
          <xsd:element minOccurs="0" name="lastModified" type="xsd:dateTime"/>
          <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSOAPAttribute">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="SOAPAttribute" nillable="true" type="ns2:SOAPAttribute"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SOAPAttribute">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="values" nillable="true" type="tns:ArrayOfString"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SOAPGroup">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="ID" type="xsd:long"/>
          <xsd:element minOccurs="0" name="active" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="attributes" nillable="true" type="ns2:ArrayOfSOAPAttribute"/>
          <xsd:element minOccurs="0" name="conception" type="xsd:dateTime"/>
          <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="directoryID" type="xsd:long"/>
          <xsd:element minOccurs="0" name="lastModified" type="xsd:dateTime"/>
          <xsd:element minOccurs="0" name="members" nillable="true" type="tns:ArrayOfString"/>
          <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SOAPPrincipal">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="ID" type="xsd:long"/>
          <xsd:element minOccurs="0" name="active" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="attributes" nillable="true" type="ns2:ArrayOfSOAPAttribute"/>
          <xsd:element minOccurs="0" name="conception" type="xsd:dateTime"/>
          <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="directoryID" type="xsd:long"/>
          <xsd:element minOccurs="0" name="lastModified" type="xsd:dateTime"/>
          <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SOAPCookieInfo">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="domain" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="secure" type="xsd:boolean"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSearchRestriction">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="SearchRestriction" nillable="true" type="ns2:SearchRestriction"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SearchRestriction">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="value" nillable="true" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSOAPGroup">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="SOAPGroup" nillable="true" type="ns2:SOAPGroup"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="SOAPRole">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="ID" type="xsd:long"/>
          <xsd:element minOccurs="0" name="active" type="xsd:boolean"/>
          <xsd:element minOccurs="0" name="attributes" nillable="true" type="ns2:ArrayOfSOAPAttribute"/>
          <xsd:element minOccurs="0" name="conception" type="xsd:dateTime"/>
          <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
          <xsd:element minOccurs="0" name="directoryID" type="xsd:long"/>
          <xsd:element minOccurs="0" name="lastModified" type="xsd:dateTime"/>
          <xsd:element minOccurs="0" name="members" nillable="true" type="tns:ArrayOfString"/>
          <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSOAPRole">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="SOAPRole" nillable="true" type="ns2:SOAPRole"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfSOAPPrincipal">
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="SOAPPrincipal" nillable="true" type="ns2:SOAPPrincipal"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.integration.crowd.atlassian.com">
      <xsd:complexType name="InvalidAuthorizationTokenException"/>
      <xsd:complexType name="InvalidGroupException"/>
      <xsd:complexType name="ApplicationPermissionException"/>
      <xsd:complexType name="ObjectNotFoundException"/>
      <xsd:complexType name="InvalidTokenException"/>
      <xsd:complexType name="InvalidCredentialException"/>
      <xsd:complexType name="InvalidPrincipalException"/>
      <xsd:complexType name="ApplicationAccessDeniedException"/>
      <xsd:complexType name="InvalidAuthenticationException"/>
      <xsd:complexType name="InactiveAccountException"/>
      <xsd:complexType name="InvalidRoleException"/>
      <xsd:complexType name="InvalidEmailAddressException"/>
    </xsd:schema>
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://rmi.java">
      <xsd:complexType name="RemoteException">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="cause" nillable="true" type="ns4:Throwable"/>
          <xsd:element minOccurs="0" name="message" nillable="true" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://lang.java">
      <xsd:complexType name="Throwable"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="searchRolesRequest">
    <wsdl:part name="parameters" element="tns:searchRoles">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidPrincipalException">
    <wsdl:part name="InvalidPrincipalException" element="tns:InvalidPrincipalException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addPrincipalResponse">
    <wsdl:part name="parameters" element="tns:addPrincipalResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findRoleMembershipsRequest">
    <wsdl:part name="parameters" element="tns:findRoleMemberships">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removePrincipalFromGroupResponse">
    <wsdl:part name="parameters" element="tns:removePrincipalFromGroupResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isRoleMemberRequest">
    <wsdl:part name="parameters" element="tns:isRoleMember">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeAttributeFromPrincipalResponse">
    <wsdl:part name="parameters" element="tns:removeAttributeFromPrincipalResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidCredentialException">
    <wsdl:part name="InvalidCredentialException" element="tns:InvalidCredentialException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addAttributeToPrincipalResponse">
    <wsdl:part name="parameters" element="tns:addAttributeToPrincipalResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updatePrincipalAttributeResponse">
    <wsdl:part name="parameters" element="tns:updatePrincipalAttributeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidTokenException">
    <wsdl:part name="InvalidTokenException" element="tns:InvalidTokenException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="authenticatePrincipalSimpleResponse">
    <wsdl:part name="parameters" element="tns:authenticatePrincipalSimpleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeAttributeFromPrincipalRequest">
    <wsdl:part name="parameters" element="tns:removeAttributeFromPrincipal">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchPrincipalsResponse">
    <wsdl:part name="parameters" element="tns:searchPrincipalsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updatePrincipalAttributeRequest">
    <wsdl:part name="parameters" element="tns:updatePrincipalAttribute">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAllGroupRelationshipsRequest">
    <wsdl:part name="parameters" element="tns:findAllGroupRelationships">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRoleRequest">
    <wsdl:part name="parameters" element="tns:removeRole">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAllGroupNamesResponse">
    <wsdl:part name="parameters" element="tns:findAllGroupNamesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addPrincipalToGroupResponse">
    <wsdl:part name="parameters" element="tns:addPrincipalToGroupResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="authenticateApplicationResponse">
    <wsdl:part name="parameters" element="tns:authenticateApplicationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidAuthenticationException">
    <wsdl:part name="InvalidAuthenticationException" element="tns:InvalidAuthenticationException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addPrincipalToRoleResponse">
    <wsdl:part name="parameters" element="tns:addPrincipalToRoleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateGroupResponse">
    <wsdl:part name="parameters" element="tns:updateGroupResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createPrincipalTokenResponse">
    <wsdl:part name="parameters" element="tns:createPrincipalTokenResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isGroupMemberRequest">
    <wsdl:part name="parameters" element="tns:isGroupMember">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addGroupResponse">
    <wsdl:part name="parameters" element="tns:addGroupResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removePrincipalFromGroupRequest">
    <wsdl:part name="parameters" element="tns:removePrincipalFromGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findPrincipalByNameResponse">
    <wsdl:part name="parameters" element="tns:findPrincipalByNameResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findRoleMembershipsResponse">
    <wsdl:part name="parameters" element="tns:findRoleMembershipsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findGroupByNameResponse">
    <wsdl:part name="parameters" element="tns:findGroupByNameResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findRoleByNameRequest">
    <wsdl:part name="parameters" element="tns:findRoleByName">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAllGroupRelationshipsResponse">
    <wsdl:part name="parameters" element="tns:findAllGroupRelationshipsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addRoleRequest">
    <wsdl:part name="parameters" element="tns:addRole">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="resetPrincipalCredentialResponse">
    <wsdl:part name="parameters" element="tns:resetPrincipalCredentialResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAllRoleNamesResponse">
    <wsdl:part name="parameters" element="tns:findAllRoleNamesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InactiveAccountException">
    <wsdl:part name="InactiveAccountException" element="tns:InactiveAccountException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRoleResponse">
    <wsdl:part name="parameters" element="tns:removeRoleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findPrincipalByTokenResponse">
    <wsdl:part name="parameters" element="tns:findPrincipalByTokenResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="invalidatePrincipalTokenResponse">
    <wsdl:part name="parameters" element="tns:invalidatePrincipalTokenResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addAttributeToPrincipalRequest">
    <wsdl:part name="parameters" element="tns:addAttributeToPrincipal">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removePrincipalFromRoleResponse">
    <wsdl:part name="parameters" element="tns:removePrincipalFromRoleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addPrincipalToRoleRequest">
    <wsdl:part name="parameters" element="tns:addPrincipalToRole">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findPrincipalByNameRequest">
    <wsdl:part name="parameters" element="tns:findPrincipalByName">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAllPrincipalNamesResponse">
    <wsdl:part name="parameters" element="tns:findAllPrincipalNamesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateGroupRequest">
    <wsdl:part name="parameters" element="tns:updateGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isValidPrincipalTokenResponse">
    <wsdl:part name="parameters" element="tns:isValidPrincipalTokenResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGrantedAuthoritiesRequest">
    <wsdl:part name="parameters" element="tns:getGrantedAuthorities">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="invalidatePrincipalTokenRequest">
    <wsdl:part name="parameters" element="tns:invalidatePrincipalToken">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findRoleByNameResponse">
    <wsdl:part name="parameters" element="tns:findRoleByNameResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isCacheEnabledResponse">
    <wsdl:part name="parameters" element="tns:isCacheEnabledResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findPrincipalByTokenRequest">
    <wsdl:part name="parameters" element="tns:findPrincipalByToken">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addRoleResponse">
    <wsdl:part name="parameters" element="tns:addRoleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCacheTimeRequest">
    <wsdl:part name="parameters" element="tns:getCacheTime">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeGroupRequest">
    <wsdl:part name="parameters" element="tns:removeGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAllRoleNamesRequest">
    <wsdl:part name="parameters" element="tns:findAllRoleNames">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isCacheEnabledRequest">
    <wsdl:part name="parameters" element="tns:isCacheEnabled">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchGroupsResponse">
    <wsdl:part name="parameters" element="tns:searchGroupsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGrantedAuthoritiesResponse">
    <wsdl:part name="parameters" element="tns:getGrantedAuthoritiesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidRoleException">
    <wsdl:part name="InvalidRoleException" element="tns:InvalidRoleException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAllPrincipalNamesRequest">
    <wsdl:part name="parameters" element="tns:findAllPrincipalNames">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findGroupByNameRequest">
    <wsdl:part name="parameters" element="tns:findGroupByName">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchGroupsRequest">
    <wsdl:part name="parameters" element="tns:searchGroups">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isValidPrincipalTokenRequest">
    <wsdl:part name="parameters" element="tns:isValidPrincipalToken">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createPrincipalTokenRequest">
    <wsdl:part name="parameters" element="tns:createPrincipalToken">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ApplicationPermissionException">
    <wsdl:part name="ApplicationPermissionException" element="tns:ApplicationPermissionException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removePrincipalFromRoleRequest">
    <wsdl:part name="parameters" element="tns:removePrincipalFromRole">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ObjectNotFoundException">
    <wsdl:part name="ObjectNotFoundException" element="tns:ObjectNotFoundException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCacheTimeResponse">
    <wsdl:part name="parameters" element="tns:getCacheTimeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="resetPrincipalCredentialRequest">
    <wsdl:part name="parameters" element="tns:resetPrincipalCredential">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidAuthorizationTokenException">
    <wsdl:part name="InvalidAuthorizationTokenException" element="tns:InvalidAuthorizationTokenException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removePrincipalResponse">
    <wsdl:part name="parameters" element="tns:removePrincipalResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addPrincipalToGroupRequest">
    <wsdl:part name="parameters" element="tns:addPrincipalToGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ApplicationAccessDeniedException">
    <wsdl:part name="ApplicationAccessDeniedException" element="tns:ApplicationAccessDeniedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isGroupMemberResponse">
    <wsdl:part name="parameters" element="tns:isGroupMemberResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="authenticateApplicationRequest">
    <wsdl:part name="parameters" element="tns:authenticateApplication">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updatePrincipalCredentialRequest">
    <wsdl:part name="parameters" element="tns:updatePrincipalCredential">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updatePrincipalCredentialResponse">
    <wsdl:part name="parameters" element="tns:updatePrincipalCredentialResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchRolesResponse">
    <wsdl:part name="parameters" element="tns:searchRolesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDomainResponse">
    <wsdl:part name="parameters" element="tns:getDomainResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addPrincipalRequest">
    <wsdl:part name="parameters" element="tns:addPrincipal">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchPrincipalsRequest">
    <wsdl:part name="parameters" element="tns:searchPrincipals">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RemoteException">
    <wsdl:part name="RemoteException" element="tns:RemoteException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCookieInfoResponse">
    <wsdl:part name="parameters" element="tns:getCookieInfoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAllGroupNamesRequest">
    <wsdl:part name="parameters" element="tns:findAllGroupNames">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isRoleMemberResponse">
    <wsdl:part name="parameters" element="tns:isRoleMemberResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidEmailAddressException">
    <wsdl:part name="InvalidEmailAddressException" element="tns:InvalidEmailAddressException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="authenticatePrincipalRequest">
    <wsdl:part name="parameters" element="tns:authenticatePrincipal">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addGroupRequest">
    <wsdl:part name="parameters" element="tns:addGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="authenticatePrincipalResponse">
    <wsdl:part name="parameters" element="tns:authenticatePrincipalResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidGroupException">
    <wsdl:part name="InvalidGroupException" element="tns:InvalidGroupException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findGroupMembershipsRequest">
    <wsdl:part name="parameters" element="tns:findGroupMemberships">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDomainRequest">
    <wsdl:part name="parameters" element="tns:getDomain">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCookieInfoRequest">
    <wsdl:part name="parameters" element="tns:getCookieInfo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="authenticatePrincipalSimpleRequest">
    <wsdl:part name="parameters" element="tns:authenticatePrincipalSimple">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findGroupMembershipsResponse">
    <wsdl:part name="parameters" element="tns:findGroupMembershipsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removePrincipalRequest">
    <wsdl:part name="parameters" element="tns:removePrincipal">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeGroupResponse">
    <wsdl:part name="parameters" element="tns:removeGroupResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="SecurityServerPortType">
    <wsdl:operation name="findAllGroupRelationships">
      <wsdl:input name="findAllGroupRelationshipsRequest" message="tns:findAllGroupRelationshipsRequest">
    </wsdl:input>
      <wsdl:output name="findAllGroupRelationshipsResponse" message="tns:findAllGroupRelationshipsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addGroup">
      <wsdl:input name="addGroupRequest" message="tns:addGroupRequest">
    </wsdl:input>
      <wsdl:output name="addGroupResponse" message="tns:addGroupResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidGroupException" message="tns:InvalidGroupException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException" message="tns:ApplicationPermissionException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addPrincipalToRole">
      <wsdl:input name="addPrincipalToRoleRequest" message="tns:addPrincipalToRoleRequest">
    </wsdl:input>
      <wsdl:output name="addPrincipalToRoleResponse" message="tns:addPrincipalToRoleResponse">
    </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException" message="tns:ObjectNotFoundException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException" message="tns:ApplicationPermissionException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findPrincipalByToken">
      <wsdl:input name="findPrincipalByTokenRequest" message="tns:findPrincipalByTokenRequest">
    </wsdl:input>
      <wsdl:output name="findPrincipalByTokenResponse" message="tns:findPrincipalByTokenResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidTokenException" message="tns:InvalidTokenException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePrincipalCredential">
      <wsdl:input name="updatePrincipalCredentialRequest" message="tns:updatePrincipalCredentialRequest">
    </wsdl:input>
      <wsdl:output name="updatePrincipalCredentialResponse" message="tns:updatePrincipalCredentialResponse">
    </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException" message="tns:ObjectNotFoundException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException" message="tns:ApplicationPermissionException">
    </wsdl:fault>
      <wsdl:fault name="InvalidCredentialException" message="tns:InvalidCredentialException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGrantedAuthorities">
      <wsdl:input name="getGrantedAuthoritiesRequest" message="tns:getGrantedAuthoritiesRequest">
    </wsdl:input>
      <wsdl:output name="getGrantedAuthoritiesResponse" message="tns:getGrantedAuthoritiesResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addPrincipal">
      <wsdl:input name="addPrincipalRequest" message="tns:addPrincipalRequest">
    </wsdl:input>
      <wsdl:output name="addPrincipalResponse" message="tns:addPrincipalResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidPrincipalException" message="tns:InvalidPrincipalException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException" message="tns:ApplicationPermissionException">
    </wsdl:fault>
      <wsdl:fault name="InvalidCredentialException" message="tns:InvalidCredentialException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addAttributeToPrincipal">
      <wsdl:input name="addAttributeToPrincipalRequest" message="tns:addAttributeToPrincipalRequest">
    </wsdl:input>
      <wsdl:output name="addAttributeToPrincipalResponse" message="tns:addAttributeToPrincipalResponse">
    </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException" message="tns:ObjectNotFoundException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException" message="tns:ApplicationPermissionException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="invalidatePrincipalToken">
      <wsdl:input name="invalidatePrincipalTokenRequest" message="tns:invalidatePrincipalTokenRequest">
    </wsdl:input>
      <wsdl:output name="invalidatePrincipalTokenResponse" message="tns:invalidatePrincipalTokenResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAllGroupNames">
      <wsdl:input name="findAllGroupNamesRequest" message="tns:findAllGroupNamesRequest">
    </wsdl:input>
      <wsdl:output name="findAllGroupNamesResponse" message="tns:findAllGroupNamesResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findRoleMemberships">
      <wsdl:input name="findRoleMembershipsRequest" message="tns:findRoleMembershipsRequest">
    </wsdl:input>
      <wsdl:output name="findRoleMembershipsResponse" message="tns:findRoleMembershipsResponse">
    </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException" message="tns:ObjectNotFoundException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePrincipal">
      <wsdl:input name="removePrincipalRequest" message="tns:removePrincipalRequest">
    </wsdl:input>
      <wsdl:output name="removePrincipalResponse" message="tns:removePrincipalResponse">
    </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException" message="tns:ObjectNotFoundException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException" message="tns:ApplicationPermissionException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isValidPrincipalToken">
      <wsdl:input name="isValidPrincipalTokenRequest" message="tns:isValidPrincipalTokenRequest">
    </wsdl:input>
      <wsdl:output name="isValidPrincipalTokenResponse" message="tns:isValidPrincipalTokenResponse">
    </wsdl:output>
      <wsdl:fault name="ApplicationAccessDeniedException" message="tns:ApplicationAccessDeniedException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authenticatePrincipalSimple">
      <wsdl:input name="authenticatePrincipalSimpleRequest" message="tns:authenticatePrincipalSimpleRequest">
    </wsdl:input>
      <wsdl:output name="authenticatePrincipalSimpleResponse" message="tns:authenticatePrincipalSimpleResponse">
    </wsdl:output>
      <wsdl:fault name="ApplicationAccessDeniedException" message="tns:ApplicationAccessDeniedException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthenticationException" message="tns:InvalidAuthenticationException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="InactiveAccountException" message="tns:InactiveAccountException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRole">
      <wsdl:input name="removeRoleRequest" message="tns:removeRoleRequest">
    </wsdl:input>
      <wsdl:output name="removeRoleResponse" message="tns:removeRoleResponse">
    </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException" message="tns:ObjectNotFoundException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException" message="tns:ApplicationPermissionException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCookieInfo">
      <wsdl:input name="getCookieInfoRequest" message="tns:getCookieInfoRequest">
    </wsdl:input>
      <wsdl:output name="getCookieInfoResponse" message="tns:getCookieInfoResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePrincipalAttribute">
      <wsdl:input name="updatePrincipalAttributeRequest" message="tns:updatePrincipalAttributeRequest">
    </wsdl:input>
      <wsdl:output name="updatePrincipalAttributeResponse" message="tns:updatePrincipalAttributeResponse">
    </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException" message="tns:ObjectNotFoundException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException" message="tns:ApplicationPermissionException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchGroups">
      <wsdl:input name="searchGroupsRequest" message="tns:searchGroupsRequest">
    </wsdl:input>
      <wsdl:output name="searchGroupsResponse" message="tns:searchGroupsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCacheTime">
      <wsdl:input name="getCacheTimeRequest" message="tns:getCacheTimeRequest">
    </wsdl:input>
      <wsdl:output name="getCacheTimeResponse" message="tns:getCacheTimeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isRoleMember">
      <wsdl:input name="isRoleMemberRequest" message="tns:isRoleMemberRequest">
    </wsdl:input>
      <wsdl:output name="isRoleMemberResponse" message="tns:isRoleMemberResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateGroup">
      <wsdl:input name="updateGroupRequest" message="tns:updateGroupRequest">
    </wsdl:input>
      <wsdl:output name="updateGroupResponse" message="tns:updateGroupResponse">
    </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException" message="tns:ObjectNotFoundException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException" message="tns:ApplicationPermissionException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAllRoleNames">
      <wsdl:input name="findAllRoleNamesRequest" message="tns:findAllRoleNamesRequest">
    </wsdl:input>
      <wsdl:output name="findAllRoleNamesResponse" message="tns:findAllRoleNamesResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findRoleByName">
      <wsdl:input name="findRoleByNameRequest" message="tns:findRoleByNameRequest">
    </wsdl:input>
      <wsdl:output name="findRoleByNameResponse" message="tns:findRoleByNameResponse">
    </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException" message="tns:ObjectNotFoundException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isCacheEnabled">
      <wsdl:input name="isCacheEnabledRequest" message="tns:isCacheEnabledRequest">
    </wsdl:input>
      <wsdl:output name="isCacheEnabledResponse" message="tns:isCacheEnabledResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findGroupByName">
      <wsdl:input name="findGroupByNameRequest" message="tns:findGroupByNameRequest">
    </wsdl:input>
      <wsdl:output name="findGroupByNameResponse" message="tns:findGroupByNameResponse">
    </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException" message="tns:ObjectNotFoundException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePrincipalFromRole">
      <wsdl:input name="removePrincipalFromRoleRequest" message="tns:removePrincipalFromRoleRequest">
    </wsdl:input>
      <wsdl:output name="removePrincipalFromRoleResponse" message="tns:removePrincipalFromRoleResponse">
    </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException" message="tns:ObjectNotFoundException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException" message="tns:ApplicationPermissionException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authenticatePrincipal">
      <wsdl:input name="authenticatePrincipalRequest" message="tns:authenticatePrincipalRequest">
    </wsdl:input>
      <wsdl:output name="authenticatePrincipalResponse" message="tns:authenticatePrincipalResponse">
    </wsdl:output>
      <wsdl:fault name="ApplicationAccessDeniedException" message="tns:ApplicationAccessDeniedException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthenticationException" message="tns:InvalidAuthenticationException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="InactiveAccountException" message="tns:InactiveAccountException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findGroupMemberships">
      <wsdl:input name="findGroupMembershipsRequest" message="tns:findGroupMembershipsRequest">
    </wsdl:input>
      <wsdl:output name="findGroupMembershipsResponse" message="tns:findGroupMembershipsResponse">
    </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException" message="tns:ObjectNotFoundException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addPrincipalToGroup">
      <wsdl:input name="addPrincipalToGroupRequest" message="tns:addPrincipalToGroupRequest">
    </wsdl:input>
      <wsdl:output name="addPrincipalToGroupResponse" message="tns:addPrincipalToGroupResponse">
    </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException" message="tns:ObjectNotFoundException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException" message="tns:ApplicationPermissionException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeGroup">
      <wsdl:input name="removeGroupRequest" message="tns:removeGroupRequest">
    </wsdl:input>
      <wsdl:output name="removeGroupResponse" message="tns:removeGroupResponse">
    </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException" message="tns:ObjectNotFoundException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException" message="tns:ApplicationPermissionException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeAttributeFromPrincipal">
      <wsdl:input name="removeAttributeFromPrincipalRequest" message="tns:removeAttributeFromPrincipalRequest">
    </wsdl:input>
      <wsdl:output name="removeAttributeFromPrincipalResponse" message="tns:removeAttributeFromPrincipalResponse">
    </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException" message="tns:ObjectNotFoundException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException" message="tns:ApplicationPermissionException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAllPrincipalNames">
      <wsdl:input name="findAllPrincipalNamesRequest" message="tns:findAllPrincipalNamesRequest">
    </wsdl:input>
      <wsdl:output name="findAllPrincipalNamesResponse" message="tns:findAllPrincipalNamesResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRole">
      <wsdl:input name="addRoleRequest" message="tns:addRoleRequest">
    </wsdl:input>
      <wsdl:output name="addRoleResponse" message="tns:addRoleResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidRoleException" message="tns:InvalidRoleException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException" message="tns:ApplicationPermissionException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createPrincipalToken">
      <wsdl:input name="createPrincipalTokenRequest" message="tns:createPrincipalTokenRequest">
    </wsdl:input>
      <wsdl:output name="createPrincipalTokenResponse" message="tns:createPrincipalTokenResponse">
    </wsdl:output>
      <wsdl:fault name="ApplicationAccessDeniedException" message="tns:ApplicationAccessDeniedException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthenticationException" message="tns:InvalidAuthenticationException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="InactiveAccountException" message="tns:InactiveAccountException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchRoles">
      <wsdl:input name="searchRolesRequest" message="tns:searchRolesRequest">
    </wsdl:input>
      <wsdl:output name="searchRolesResponse" message="tns:searchRolesResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePrincipalFromGroup">
      <wsdl:input name="removePrincipalFromGroupRequest" message="tns:removePrincipalFromGroupRequest">
    </wsdl:input>
      <wsdl:output name="removePrincipalFromGroupResponse" message="tns:removePrincipalFromGroupResponse">
    </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException" message="tns:ObjectNotFoundException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException" message="tns:ApplicationPermissionException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findPrincipalByName">
      <wsdl:input name="findPrincipalByNameRequest" message="tns:findPrincipalByNameRequest">
    </wsdl:input>
      <wsdl:output name="findPrincipalByNameResponse" message="tns:findPrincipalByNameResponse">
    </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException" message="tns:ObjectNotFoundException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resetPrincipalCredential">
      <wsdl:input name="resetPrincipalCredentialRequest" message="tns:resetPrincipalCredentialRequest">
    </wsdl:input>
      <wsdl:output name="resetPrincipalCredentialResponse" message="tns:resetPrincipalCredentialResponse">
    </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException" message="tns:ObjectNotFoundException">
    </wsdl:fault>
      <wsdl:fault name="InvalidEmailAddressException" message="tns:InvalidEmailAddressException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException" message="tns:ApplicationPermissionException">
    </wsdl:fault>
      <wsdl:fault name="InvalidCredentialException" message="tns:InvalidCredentialException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isGroupMember">
      <wsdl:input name="isGroupMemberRequest" message="tns:isGroupMemberRequest">
    </wsdl:input>
      <wsdl:output name="isGroupMemberResponse" message="tns:isGroupMemberResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchPrincipals">
      <wsdl:input name="searchPrincipalsRequest" message="tns:searchPrincipalsRequest">
    </wsdl:input>
      <wsdl:output name="searchPrincipalsResponse" message="tns:searchPrincipalsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDomain">
      <wsdl:input name="getDomainRequest" message="tns:getDomainRequest">
    </wsdl:input>
      <wsdl:output name="getDomainResponse" message="tns:getDomainResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authenticateApplication">
      <wsdl:input name="authenticateApplicationRequest" message="tns:authenticateApplicationRequest">
    </wsdl:input>
      <wsdl:output name="authenticateApplicationResponse" message="tns:authenticateApplicationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidAuthenticationException" message="tns:InvalidAuthenticationException">
    </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException" message="tns:InvalidAuthorizationTokenException">
    </wsdl:fault>
      <wsdl:fault name="RemoteException" message="tns:RemoteException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="SecurityServerHttpBinding" type="tns:SecurityServerPortType">
    <wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="findAllGroupRelationships">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="findAllGroupRelationshipsRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findAllGroupRelationshipsResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addGroup">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addGroupRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addGroupResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidGroupException">
        <wsdlsoap:fault name="InvalidGroupException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException">
        <wsdlsoap:fault name="ApplicationPermissionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addPrincipalToRole">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addPrincipalToRoleRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addPrincipalToRoleResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException">
        <wsdlsoap:fault name="ObjectNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException">
        <wsdlsoap:fault name="ApplicationPermissionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findPrincipalByToken">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="findPrincipalByTokenRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findPrincipalByTokenResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidTokenException">
        <wsdlsoap:fault name="InvalidTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePrincipalCredential">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="updatePrincipalCredentialRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updatePrincipalCredentialResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException">
        <wsdlsoap:fault name="ObjectNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException">
        <wsdlsoap:fault name="ApplicationPermissionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidCredentialException">
        <wsdlsoap:fault name="InvalidCredentialException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGrantedAuthorities">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getGrantedAuthoritiesRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getGrantedAuthoritiesResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addPrincipal">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addPrincipalRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addPrincipalResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidPrincipalException">
        <wsdlsoap:fault name="InvalidPrincipalException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException">
        <wsdlsoap:fault name="ApplicationPermissionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidCredentialException">
        <wsdlsoap:fault name="InvalidCredentialException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addAttributeToPrincipal">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addAttributeToPrincipalRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addAttributeToPrincipalResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException">
        <wsdlsoap:fault name="ObjectNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException">
        <wsdlsoap:fault name="ApplicationPermissionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="invalidatePrincipalToken">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="invalidatePrincipalTokenRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="invalidatePrincipalTokenResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAllGroupNames">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="findAllGroupNamesRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findAllGroupNamesResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findRoleMemberships">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="findRoleMembershipsRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findRoleMembershipsResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException">
        <wsdlsoap:fault name="ObjectNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePrincipal">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="removePrincipalRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removePrincipalResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException">
        <wsdlsoap:fault name="ObjectNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException">
        <wsdlsoap:fault name="ApplicationPermissionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isValidPrincipalToken">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="isValidPrincipalTokenRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isValidPrincipalTokenResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ApplicationAccessDeniedException">
        <wsdlsoap:fault name="ApplicationAccessDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authenticatePrincipalSimple">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="authenticatePrincipalSimpleRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="authenticatePrincipalSimpleResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ApplicationAccessDeniedException">
        <wsdlsoap:fault name="ApplicationAccessDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthenticationException">
        <wsdlsoap:fault name="InvalidAuthenticationException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InactiveAccountException">
        <wsdlsoap:fault name="InactiveAccountException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRole">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="removeRoleRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeRoleResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException">
        <wsdlsoap:fault name="ObjectNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException">
        <wsdlsoap:fault name="ApplicationPermissionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCookieInfo">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getCookieInfoRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCookieInfoResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePrincipalAttribute">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="updatePrincipalAttributeRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updatePrincipalAttributeResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException">
        <wsdlsoap:fault name="ObjectNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException">
        <wsdlsoap:fault name="ApplicationPermissionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchGroups">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="searchGroupsRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchGroupsResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCacheTime">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getCacheTimeRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCacheTimeResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isRoleMember">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="isRoleMemberRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isRoleMemberResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateGroup">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="updateGroupRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateGroupResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException">
        <wsdlsoap:fault name="ObjectNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException">
        <wsdlsoap:fault name="ApplicationPermissionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAllRoleNames">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="findAllRoleNamesRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findAllRoleNamesResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findRoleByName">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="findRoleByNameRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findRoleByNameResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException">
        <wsdlsoap:fault name="ObjectNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isCacheEnabled">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="isCacheEnabledRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isCacheEnabledResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findGroupByName">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="findGroupByNameRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findGroupByNameResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException">
        <wsdlsoap:fault name="ObjectNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePrincipalFromRole">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="removePrincipalFromRoleRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removePrincipalFromRoleResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException">
        <wsdlsoap:fault name="ObjectNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException">
        <wsdlsoap:fault name="ApplicationPermissionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authenticatePrincipal">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="authenticatePrincipalRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="authenticatePrincipalResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ApplicationAccessDeniedException">
        <wsdlsoap:fault name="ApplicationAccessDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthenticationException">
        <wsdlsoap:fault name="InvalidAuthenticationException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InactiveAccountException">
        <wsdlsoap:fault name="InactiveAccountException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findGroupMemberships">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="findGroupMembershipsRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findGroupMembershipsResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException">
        <wsdlsoap:fault name="ObjectNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addPrincipalToGroup">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addPrincipalToGroupRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addPrincipalToGroupResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException">
        <wsdlsoap:fault name="ObjectNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException">
        <wsdlsoap:fault name="ApplicationPermissionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeGroup">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="removeGroupRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeGroupResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException">
        <wsdlsoap:fault name="ObjectNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException">
        <wsdlsoap:fault name="ApplicationPermissionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeAttributeFromPrincipal">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="removeAttributeFromPrincipalRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeAttributeFromPrincipalResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException">
        <wsdlsoap:fault name="ObjectNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException">
        <wsdlsoap:fault name="ApplicationPermissionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAllPrincipalNames">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="findAllPrincipalNamesRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findAllPrincipalNamesResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRole">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="addRoleRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addRoleResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidRoleException">
        <wsdlsoap:fault name="InvalidRoleException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException">
        <wsdlsoap:fault name="ApplicationPermissionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createPrincipalToken">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="createPrincipalTokenRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createPrincipalTokenResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ApplicationAccessDeniedException">
        <wsdlsoap:fault name="ApplicationAccessDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthenticationException">
        <wsdlsoap:fault name="InvalidAuthenticationException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InactiveAccountException">
        <wsdlsoap:fault name="InactiveAccountException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchRoles">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="searchRolesRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchRolesResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePrincipalFromGroup">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="removePrincipalFromGroupRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removePrincipalFromGroupResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException">
        <wsdlsoap:fault name="ObjectNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException">
        <wsdlsoap:fault name="ApplicationPermissionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findPrincipalByName">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="findPrincipalByNameRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findPrincipalByNameResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException">
        <wsdlsoap:fault name="ObjectNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resetPrincipalCredential">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="resetPrincipalCredentialRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="resetPrincipalCredentialResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ObjectNotFoundException">
        <wsdlsoap:fault name="ObjectNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidEmailAddressException">
        <wsdlsoap:fault name="InvalidEmailAddressException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ApplicationPermissionException">
        <wsdlsoap:fault name="ApplicationPermissionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidCredentialException">
        <wsdlsoap:fault name="InvalidCredentialException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isGroupMember">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="isGroupMemberRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isGroupMemberResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchPrincipals">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="searchPrincipalsRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchPrincipalsResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDomain">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="getDomainRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDomainResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="authenticateApplication">
      <wsdlsoap:operation soapAction=""/>
      <wsdl:input name="authenticateApplicationRequest">
        <wsdlsoap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="authenticateApplicationResponse">
        <wsdlsoap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidAuthenticationException">
        <wsdlsoap:fault name="InvalidAuthenticationException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidAuthorizationTokenException">
        <wsdlsoap:fault name="InvalidAuthorizationTokenException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RemoteException">
        <wsdlsoap:fault name="RemoteException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SecurityServer">
    <wsdl:port name="SecurityServerHttpPort" binding="tns:SecurityServerHttpBinding">
      <wsdlsoap:address location="http://localhost:8095/crowd/services/SecurityServer"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
